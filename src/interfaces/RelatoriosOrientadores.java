
package interfaces;

import static db.DAO.conexao;
import static db.DAO.instrucao;
import static db.DAO.resultado;
import static interfaces.RelatoriosAlunos.jComboBoxVigenciaRelarorio;
import sql.ExportarExcel;
import sql.ProjetoDAO;
import java.awt.Color;
import java.io.File;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author mayck
 */
public class RelatoriosOrientadores extends javax.swing.JDialog {

    /**
     * Creates new form RelatoriosAlunos
     */
    ProjetoDAO projeto = new ProjetoDAO();
    int linhaSelecionada;
    String linhaProjeto = "0";
    
    public RelatoriosOrientadores(java.awt.Frame parent, boolean modal) 
    {
        super(parent, modal);
        initComponents();
        populaComboBoxVigencia();
        jComboBoxVigenciaRelarorioOrientador.setSelectedItem(Main.jComboBoxVigencia.getSelectedItem());
        projeto.getRelatorioOrientador("");        
       
    }
    
    public void selecionaProjeto()
    {
        linhaSelecionada = jTableRelatoriosOrientador.getSelectedRow();
        linhaProjeto = (String.valueOf(jTableRelatoriosOrientador.getValueAt(linhaSelecionada, 6)));
    }
    
    public void populaComboBoxVigencia()
    {   
        String sql = "SELECT vigencia_projeto FROM projeto GROUP BY vigencia_projeto order by vigencia_projeto asc;";
        try 
        {
            db.DAO.instrucao = db.DAO.conexao.prepareStatement(sql);
            db.DAO.resultado = db.DAO.instrucao.executeQuery();
            
            while (db.DAO.resultado.next())
            {
                jComboBoxVigenciaRelarorioOrientador.addItem(db.DAO.resultado.getString("vigencia_projeto")); 
                
            }
            
        } catch (SQLException e) 
        {
            if(e instanceof com.mysql.jdbc.exceptions.jdbc4.CommunicationsException)
            {              
                JOptionPane.showMessageDialog(null, "Sua sessão expirou, faça o login novamente!");
                System.exit(0);
            }else
            {
                JOptionPane.showMessageDialog(null, e);                
            }   
         }
    }
    
    public void exportar()
    {
        if(RelatoriosOrientadores.jTableRelatoriosOrientador.getRowCount() == 0)
        {
            JOptionPane.showMessageDialog(null, "Não há dados na tabela para exportar.","Mayck Lima",JOptionPane.INFORMATION_MESSAGE);
        }else{
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Arquivos de excel","xls");
        chooser.setFileFilter(filter);
        chooser.setDialogTitle("Guardar arquivo");
        chooser.setMultiSelectionEnabled(false);
        chooser.setAcceptAllFileFilterUsed(false);
        
        if(chooser.showSaveDialog(null)==JFileChooser.APPROVE_OPTION)
        {
            List<JTable> tb = new ArrayList<>();
            List<String> nome = new ArrayList<>();
            tb.add(jTableRelatoriosOrientador);
            nome.add("Relatórios");
            String file = chooser.getSelectedFile().toString().concat(".xls");
            
            try {
                ExportarExcel e = new ExportarExcel(new File(file),tb,nome);
                if(e.exportar()){
                    JOptionPane.showMessageDialog(null, "Os dados foram exportados");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
        }
            
    }
    
        
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        abrirPastaPopup = new javax.swing.JPopupMenu();
        maisDetalhes = new javax.swing.JMenuItem();
        ordenar = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableRelatoriosOrientador = new javax.swing.JTable();
        jComboBoxVigenciaRelarorioOrientador = new javax.swing.JComboBox<>();
        txtPesquisarRelatorio = new javax.swing.JTextField();
        btnPesquisar = new javax.swing.JButton();
        exportar = new javax.swing.JButton();
        cadastrarAluno = new javax.swing.JLabel();
        bg = new javax.swing.JLabel();

        maisDetalhes.setText("Mais detalhes");
        maisDetalhes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maisDetalhesActionPerformed(evt);
            }
        });
        abrirPastaPopup.add(maisDetalhes);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Relatórios Orientadores");
        setIconImage(new ImageIcon(getClass().getResource("/imagens/icon.png")).getImage());
        setResizable(false);
        getContentPane().setLayout(null);

        jTableRelatoriosOrientador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableRelatoriosOrientador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableRelatoriosOrientadorMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableRelatoriosOrientadorMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableRelatoriosOrientadorMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTableRelatoriosOrientador);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 110, 1310, 570);

        jComboBoxVigenciaRelarorioOrientador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos" }));
        jComboBoxVigenciaRelarorioOrientador.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxVigenciaRelarorioOrientadorItemStateChanged(evt);
            }
        });
        jComboBoxVigenciaRelarorioOrientador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBoxVigenciaRelarorioOrientadorMouseClicked(evt);
            }
        });
        jComboBoxVigenciaRelarorioOrientador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxVigenciaRelarorioOrientadorActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBoxVigenciaRelarorioOrientador);
        jComboBoxVigenciaRelarorioOrientador.setBounds(10, 80, 100, 30);

        txtPesquisarRelatorio.setForeground(new java.awt.Color(153, 153, 153));
        txtPesquisarRelatorio.setText("Pesquisar...");
        txtPesquisarRelatorio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPesquisarRelatorioFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPesquisarRelatorioFocusLost(evt);
            }
        });
        txtPesquisarRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesquisarRelatorioActionPerformed(evt);
            }
        });
        txtPesquisarRelatorio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPesquisarRelatorioKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarRelatorioKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPesquisarRelatorioKeyTyped(evt);
            }
        });
        getContentPane().add(txtPesquisarRelatorio);
        txtPesquisarRelatorio.setBounds(910, 40, 340, 30);

        btnPesquisar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Pesquisa.png"))); // NOI18N
        btnPesquisar.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });
        getContentPane().add(btnPesquisar);
        btnPesquisar.setBounds(1250, 40, 60, 30);

        exportar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/excel.png"))); // NOI18N
        exportar.setText("Exportar");
        exportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportarActionPerformed(evt);
            }
        });
        getContentPane().add(exportar);
        exportar.setBounds(1220, 80, 100, 30);

        cadastrarAluno.setBackground(new java.awt.Color(204, 204, 204));
        cadastrarAluno.setFont(new java.awt.Font("Arial", 0, 30)); // NOI18N
        cadastrarAluno.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cadastrarAluno.setText("Relatórios/Certificados");
        cadastrarAluno.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        cadastrarAluno.setOpaque(true);
        getContentPane().add(cadastrarAluno);
        cadastrarAluno.setBounds(-10, -10, 1360, 90);

        bg.setBackground(new java.awt.Color(236, 236, 236));
        bg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bg.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        bg.setOpaque(true);
        getContentPane().add(bg);
        bg.setBounds(0, 70, 1340, 640);

        setBounds(0, 0, 1349, 730);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxVigenciaRelarorioOrientadorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxVigenciaRelarorioOrientadorItemStateChanged
            projeto.getRelatorioOrientador("");
    }//GEN-LAST:event_jComboBoxVigenciaRelarorioOrientadorItemStateChanged

    private void jComboBoxVigenciaRelarorioOrientadorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxVigenciaRelarorioOrientadorMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxVigenciaRelarorioOrientadorMouseClicked

    private void jComboBoxVigenciaRelarorioOrientadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxVigenciaRelarorioOrientadorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxVigenciaRelarorioOrientadorActionPerformed

    private void txtPesquisarRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesquisarRelatorioActionPerformed

    }//GEN-LAST:event_txtPesquisarRelatorioActionPerformed

    private void txtPesquisarRelatorioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarRelatorioKeyPressed
        projeto.getRelatorioOrientador(txtPesquisarRelatorio.getText());
    }//GEN-LAST:event_txtPesquisarRelatorioKeyPressed

    private void txtPesquisarRelatorioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarRelatorioKeyReleased
               projeto.getRelatorioOrientador(txtPesquisarRelatorio.getText());

    }//GEN-LAST:event_txtPesquisarRelatorioKeyReleased

    private void txtPesquisarRelatorioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarRelatorioKeyTyped
               projeto.getRelatorioOrientador(txtPesquisarRelatorio.getText());

    }//GEN-LAST:event_txtPesquisarRelatorioKeyTyped

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
       
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void exportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportarActionPerformed
      exportar();
    }//GEN-LAST:event_exportarActionPerformed

    private void maisDetalhesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maisDetalhesActionPerformed
        JFrame mainFrame = new JFrame();
        MaisDetalhesProjeto detalhes = new MaisDetalhesProjeto(mainFrame, true, String.valueOf(jTableRelatoriosOrientador.getValueAt(linhaSelecionada, 6)));
        detalhes.setLocationRelativeTo(mainFrame);
        detalhes.setVisible(true);
    }//GEN-LAST:event_maisDetalhesActionPerformed

    private void jTableRelatoriosOrientadorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableRelatoriosOrientadorMouseClicked
        if(jTableRelatoriosOrientador.getSelectedRow() >= 0)
            {
                selecionaProjeto();                
            }else
            {
               // JOptionPane.showMessageDialog(null, "Selecione uma linha");
            }  
    }//GEN-LAST:event_jTableRelatoriosOrientadorMouseClicked

    private void jTableRelatoriosOrientadorMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableRelatoriosOrientadorMousePressed
            if(jTableRelatoriosOrientador.getSelectedRow() >= 0)
            {
                selecionaProjeto();                
            }else
            {
                JOptionPane.showMessageDialog(null, "Selecione uma linha");
            } 
    }//GEN-LAST:event_jTableRelatoriosOrientadorMousePressed

    private void jTableRelatoriosOrientadorMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableRelatoriosOrientadorMouseReleased
            if(jTableRelatoriosOrientador.getSelectedRow() >= 0)
            {
                if(evt.isPopupTrigger())
                {
                    abrirPastaPopup.show(jTableRelatoriosOrientador, evt.getX(), evt.getY());
                }
                                
            }else
            {
                //JOptionPane.showMessageDialog(null, "Selecione uma linha");
            }
    }//GEN-LAST:event_jTableRelatoriosOrientadorMouseReleased

    private void txtPesquisarRelatorioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPesquisarRelatorioFocusGained
        txtPesquisarRelatorio.setText("");
        txtPesquisarRelatorio.setForeground(Color.black);
    }//GEN-LAST:event_txtPesquisarRelatorioFocusGained

    private void txtPesquisarRelatorioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPesquisarRelatorioFocusLost
         txtPesquisarRelatorio.setText("Pesquisar...");
         txtPesquisarRelatorio.setForeground(Color.GRAY);
    }//GEN-LAST:event_txtPesquisarRelatorioFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RelatoriosOrientadores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RelatoriosOrientadores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RelatoriosOrientadores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RelatoriosOrientadores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RelatoriosOrientadores dialog = new RelatoriosOrientadores(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPopupMenu abrirPastaPopup;
    private javax.swing.JLabel bg;
    private static javax.swing.JButton btnPesquisar;
    private javax.swing.JLabel cadastrarAluno;
    private javax.swing.JButton exportar;
    public static javax.swing.JComboBox<String> jComboBoxVigenciaRelarorioOrientador;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTableRelatoriosOrientador;
    private javax.swing.JMenuItem maisDetalhes;
    private javax.swing.ButtonGroup ordenar;
    private javax.swing.JTextField txtPesquisarRelatorio;
    // End of variables declaration//GEN-END:variables
}
