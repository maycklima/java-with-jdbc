package interfaces;

import static db.DAO.conexao;
import static db.DAO.instrucao;
import static db.DAO.resultado;
import static interfaces.Main.JRbALuno;
import static interfaces.Main.jRbOrientador;
import static interfaces.Main.jrbMedio;
import static interfaces.Main.jrbSuperior;
import modelos.Projeto;
import sql.AlunoDAO;
import sql.OrientadorDAO;
import sql.ProjetoDAO;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author mayck
 */
public class SubstituirOrientador extends javax.swing.JDialog {

    
    static ArrayList<Integer> idOrientadores = new ArrayList<Integer>();
    int idOrientador = 0;
    
    public SubstituirOrientador(java.awt.Frame parent, boolean modal) 
    {
        super(parent, modal);
        initComponents();
        populaComboBoxOrientador();
    }
    
    public static void populaComboBoxOrientador()
    {
        idOrientadores.clear();
        try 
        {
            instrucao = conexao.prepareStatement("SELECT id_orientador, nome_orientador FROM orientador where  orientador_excluido = 0 order by nome_orientador");
            resultado = instrucao.executeQuery();
            
            while (resultado.next())
            {
                idOrientadores.add(Integer.parseInt(resultado.getString("id_orientador"))); 
                jComboNovoOrientador.addItem(resultado.getString("nome_orientador"));                
            }
            
        } catch (SQLException e) 
        {
            if(e instanceof com.mysql.jdbc.exceptions.jdbc4.CommunicationsException)
            {              
                JOptionPane.showMessageDialog(null, "Sua sessão expirou, faça o login novamente!");
                System.exit(0);
            }else
            {
                JOptionPane.showMessageDialog(null, e);                
            }   
         }
               
    }
    
    public void atualizaOrientador()
    {        
        ProjetoDAO pro = new ProjetoDAO();
        AlunoDAO a = new AlunoDAO();
        OrientadorDAO o = new OrientadorDAO();
        Projeto p = new Projeto();
        try 
        {               
                
                idOrientador = idOrientadores.get(jComboNovoOrientador.getSelectedIndex());
                
                p.setOrientador(idOrientador);
                pro.atualizarOrientador(p, Main.linhaProjeto);
                
                if(jRbOrientador.isSelected())
                {
                    if(jrbSuperior.isSelected())
                    {
                        o.getOrientadorSuperior();
                    }else if(jrbMedio.isSelected())
                    {
                        o.getOrientadorMedio();
                    }else{
                        o.getOrientador("");
                    }
                }
                else if(JRbALuno.isSelected())
                {
                  if(jrbSuperior.isSelected())
                    {
                        a.getAlunoSuperior();
                    }else if(jrbMedio.isSelected())
                    {
                        a.getAlunoMedio();
                    }else{
                        a.getAluno("");
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Escolha entre aluno e orientador pra fazer a busca!");
                }
                Main.limparProjeto();
                dispose();    
        } catch (HeadlessException e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
        dispose();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nomeAluno = new javax.swing.JLabel();
        jComboNovoOrientador = new javax.swing.JComboBox<>();
        jbCriar = new javax.swing.JButton();
        bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Alterar Orientador");
        setIconImage(new ImageIcon(getClass().getResource("/imagens/icon.png")).getImage());
        setResizable(false);
        getContentPane().setLayout(null);

        nomeAluno.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        nomeAluno.setText("Selecione o orientador");
        getContentPane().add(nomeAluno);
        nomeAluno.setBounds(20, 20, 170, 20);

        jComboNovoOrientador.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboNovoOrientadorItemStateChanged(evt);
            }
        });
        getContentPane().add(jComboNovoOrientador);
        jComboNovoOrientador.setBounds(20, 40, 330, 30);

        jbCriar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jbCriar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/salvar.png"))); // NOI18N
        jbCriar.setText("Alterar");
        jbCriar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCriarActionPerformed(evt);
            }
        });
        jbCriar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbCriarKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jbCriarKeyTyped(evt);
            }
        });
        getContentPane().add(jbCriar);
        jbCriar.setBounds(230, 80, 120, 30);

        bg.setBackground(new java.awt.Color(236, 236, 236));
        bg.setOpaque(true);
        getContentPane().add(bg);
        bg.setBounds(0, 0, 390, 140);

        setSize(new java.awt.Dimension(387, 165));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboNovoOrientadorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboNovoOrientadorItemStateChanged
        idOrientador = idOrientadores.get(jComboNovoOrientador.getSelectedIndex());
    }//GEN-LAST:event_jComboNovoOrientadorItemStateChanged

    private void jbCriarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbCriarKeyTyped
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            atualizaOrientador();
        }
    }//GEN-LAST:event_jbCriarKeyTyped

    private void jbCriarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbCriarKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            atualizaOrientador();
        }
    }//GEN-LAST:event_jbCriarKeyPressed

    private void jbCriarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCriarActionPerformed
        atualizaOrientador();
    }//GEN-LAST:event_jbCriarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SubstituirOrientador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SubstituirOrientador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SubstituirOrientador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SubstituirOrientador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SubstituirOrientador dialog = new SubstituirOrientador(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bg;
    public static javax.swing.JComboBox<String> jComboNovoOrientador;
    private javax.swing.JButton jbCriar;
    private javax.swing.JLabel nomeAluno;
    // End of variables declaration//GEN-END:variables
}
