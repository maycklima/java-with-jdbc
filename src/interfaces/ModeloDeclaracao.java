/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import java.awt.Color;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.URL;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import modelos.Usuario;

/**
 *
 * @author mayck
 */
public class ModeloDeclaracao extends javax.swing.JDialog {

     String caminho_modelo = "";
     JFileChooser abrir = new JFileChooser();
     String txtFileAntes;
     String txtFilesDepois;
    
    public ModeloDeclaracao(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        labelMensagem.setVisible(false);
    }
    
    public Boolean enviarModelo()
    {         
       File diretorio = new File(Usuario.getSalvar_em() + "\\00 - modelo");
       if (!diretorio.exists())
            diretorio.mkdirs();
        
       try {
            // Move o arquivo para o novo diretorio
            Files.deleteIfExists(Paths.get(diretorio + "\\declaracao.png"));
            Files.copy(Paths.get(caminho_modelo), Paths.get(diretorio + "\\declaracao.png"));
            return true;
        }catch (FileAlreadyExistsException e) 
        {
            JOptionPane.showMessageDialog(null, "Primeiro apague o modelo anterior da pasta do evento");
             return false;
        } 
        catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Erro:" + ex);
             return false;
        }
        catch (IOException ex) 
        {
            Logger.getLogger(ModeloDeclaracao.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtModelo = new javax.swing.JTextField();
        nomeOrientador = new javax.swing.JLabel();
        escolherArquivo = new javax.swing.JButton();
        btnEnviar = new javax.swing.JButton();
        imageIcon = new javax.swing.JLabel();
        labelMensagem = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Modelo Declaração");
        setIconImage(new ImageIcon(getClass().getResource("/imagens/icon.png")).getImage());
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        txtModelo.setEditable(false);
        getContentPane().add(txtModelo);
        txtModelo.setBounds(50, 60, 350, 30);

        nomeOrientador.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        nomeOrientador.setText("Imagem modelo declaração");
        getContentPane().add(nomeOrientador);
        nomeOrientador.setBounds(50, 40, 220, 20);

        escolherArquivo.setText("Escolher Arquivo...");
        escolherArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                escolherArquivoActionPerformed(evt);
            }
        });
        getContentPane().add(escolherArquivo);
        escolherArquivo.setBounds(270, 90, 130, 30);

        btnEnviar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/salvar.png"))); // NOI18N
        btnEnviar.setText("Salvar");
        btnEnviar.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEnviar);
        btnEnviar.setBounds(300, 140, 120, 30);

        imageIcon.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        getContentPane().add(imageIcon);
        imageIcon.setBounds(0, 50, 50, 50);

        labelMensagem.setBackground(new java.awt.Color(0, 204, 51));
        labelMensagem.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        labelMensagem.setForeground(new java.awt.Color(255, 255, 255));
        labelMensagem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelMensagem.setFocusable(false);
        labelMensagem.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        labelMensagem.setOpaque(true);
        getContentPane().add(labelMensagem);
        labelMensagem.setBounds(0, 0, 430, 20);

        setSize(new java.awt.Dimension(438, 212));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void escolherArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_escolherArquivoActionPerformed
        URL pdfIcon;
        labelMensagem.setVisible(false);
        abrir.setDialogTitle("Procurar arquivo...");
        abrir.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FileNameExtensionFilter ff = new FileNameExtensionFilter("Arquivo","png");
        abrir.setFileFilter(ff);
        int retorno = abrir.showOpenDialog(null);

        if (retorno == JFileChooser.APPROVE_OPTION)
        {
            caminho_modelo = abrir.getSelectedFile().getAbsolutePath();
            txtModelo.setText(caminho_modelo);
            try{
                pdfIcon = getClass().getResource("/imagens/iconPDF.png");
                imageIcon.setIcon(new ImageIcon(pdfIcon));
            }catch(Exception ex)
            {
                JOptionPane.showMessageDialog(null, ex);
            }
        }
    }//GEN-LAST:event_escolherArquivoActionPerformed

    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarActionPerformed
        if(txtModelo.getText().isEmpty())
        {
            labelMensagem.setVisible(true);
            labelMensagem.setText("Insira um modelo");
            labelMensagem.setBackground(new Color(255,0,0));
        }else
        {
            if(!txtFileAntes.equals(txtModelo.getText()))
            {
                if(enviarModelo())
                {
                    JOptionPane.showMessageDialog(null, "Modelo salvo com sucesso!");
                    dispose();
                }else{
                    JOptionPane.showMessageDialog(null, "Não foi possível salvar o modelo escolhido!");
                }
            }else{
                dispose();
            }   
            
        }

    }//GEN-LAST:event_btnEnviarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
         URL pdfIcon; 
        
        String arq = Usuario.getSalvar_em() + "\\00 - modelo\\declaracao.png";
        txtFileAntes = (arq);
        
        if(new File(arq).exists()) 
        {
           txtModelo.setText(arq);          
            try
            {
                pdfIcon = getClass().getResource("/imagens/img.png");
                imageIcon.setIcon(new ImageIcon(pdfIcon));
            }catch(Exception ex)
            {
                JOptionPane.showMessageDialog(null, ex);
            }
        }else{
            txtModelo.setText("");
        }
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModeloDeclaracao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModeloDeclaracao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModeloDeclaracao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModeloDeclaracao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ModeloDeclaracao dialog = new ModeloDeclaracao(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEnviar;
    private javax.swing.JButton escolherArquivo;
    private javax.swing.JLabel imageIcon;
    public static javax.swing.JLabel labelMensagem;
    private javax.swing.JLabel nomeOrientador;
    private javax.swing.JTextField txtModelo;
    // End of variables declaration//GEN-END:variables
}
